# TODO: тестирование. Формат временный (используется для первого приближения задачи, далее будет вынесен в тесты)
import spacy

from core import nlp_config


TRAIN_DATA = [
    # Исходные
    # ("Я посмотрел фильм Индиана Джонс", {"entities": [(18, 30, "MOVIE")]}),
    # ("Новый фильм Матрица очень классный", {"entities": [(12, 18, "MOVIE")]}),
    # ("Вчера смотрел Интерстеллар", {"entities": [(14, 25, "MOVIE")]}),
    # ("Рекомендую фильм Начало", {"entities": [(16, 22, "MOVIE")]}),
    # ("Пошли в кино на Титаник", {"entities": [(18, 25, "MOVIE")]}),
    # ("Смотрел сериал Игра престолов", {"entities": [(16, 31, "MOVIE")]}),
    # ("Фильм Бойцовский клуб мне понравился", {"entities": [(6, 21, "MOVIE")]}),
    # ("Ты видел Ла-Ла Ленд?", {"entities": [(9, 17, "MOVIE")]}),
    # ("Недавно посмотрел Чёрную Пантеру", {"entities": [(18, 32, "MOVIE")]}),
    # ("Обожаю анимацию Зверополис", {"entities": [(20, 29, "MOVIE")]}),
    # ("Сегодня вечером буду смотреть Крестный отец", {"entities": [(27, 39, "MOVIE")]}),
    # ("Люблю фильм Форрест Гамп", {"entities": [(11, 24, "MOVIE")]}),
    # ("Планирую пересмотреть Мстители", {"entities": [(24, 32, "MOVIE")]}),
    # ("Фильм Престиж очень интригующий", {"entities": [(6, 13, "MOVIE")]}),
    # ("Сейчас смотрю Паразиты", {"entities": [(13, 21, "MOVIE")]}),
    # ("Посоветуйте хороший фильм Побег из Шоушенка", {"entities": [(34, 52, "MOVIE")]}),
    # ("Обнаружил интересный фильм Отель Гранд Будапешт", {"entities": [(27, 50, "MOVIE")]}),
    # ("В кинотеатре показывают Бесславных ублюдков", {"entities": [(28, 49, "MOVIE")]}),
    # ("Посмотрел недавно фильм Назад в будущее", {"entities": [(25, 42, "MOVIE")]}),
    # ("Классика — фильм Таксист", {"entities": [(16, 23, "MOVIE")]}),
    # ("Я люблю смотреть фильмы, например, Интерстеллар", {"entities": [(35, 46, "MOVIE")]}),
    # ("Что скажешь про фильм Матрица?", {"entities": [(18, 24, "MOVIE")]}),
    # ("Вчера досмотрел сериал Игра престолов", {"entities": [(24, 39, "MOVIE")]}),
    # ("Моя любимая картина — Бойцовский клуб", {"entities": [(20, 35, "MOVIE")]}),
    # ("Планирую посмотреть Ла-Ла Ленд на выходных", {"entities": [(18, 26, "MOVIE")]}),
    # ("Этот фильм Чёрная Пантера просто супер", {"entities": [(12, 26, "MOVIE")]}),
    # ("Обожаю мультфильм Зверополис", {"entities": [(19, 28, "MOVIE")]}),
    # ("Не могу забыть Крестного отца", {"entities": [(17, 29, "MOVIE")]}),
    # ("Ты смотрел Форрест Гамп?", {"entities": [(12, 25, "MOVIE")]}),
    # ("Сегодня пересмотрю Мстители", {"entities": [(17, 25, "MOVIE")]}),
    # ("Мне понравился фильм Гладиатор", {"entities": [(18, 26, "MOVIE")]}),
    # ("Вчера ходил в кино на Хоббит", {"entities": [(21, 27, "MOVIE")]}),
    # ("Планирую пересмотреть Форсаж", {"entities": [(24, 30, "MOVIE")]}),
    # ("Нравится фильм Трансформеры", {"entities": [(14, 25, "MOVIE")]}),
    # ("Недавно посмотрел Дюнкерк", {"entities": [(18, 25, "MOVIE")]}),
    # ("Обожаю фильм Джокер", {"entities": [(12, 17, "MOVIE")]}),
    # ("В кино смотрел Легенду", {"entities": [(14, 21, "MOVIE")]}),
    # ("Сегодня хочу посмотреть Один дома", {"entities": [(24, 33, "MOVIE")]}),

    # Новые
    ("Только что посмотрел фильм Город Бога", {"entities": [(22, 32, "MOVIE")]}),
    ("Мне очень понравился фильм Властелин колец", {"entities": [(27, 43, "MOVIE")]}),
    ("Рекомендую фильм Большой Лебовски", {"entities": [(16, 31, "MOVIE")]}),
    ("Посмотрел сериал Во все тяжкие", {"entities": [(16, 30, "MOVIE")]}),
    ("Недавно посмотрел фильм Амели", {"entities": [(24, 29, "MOVIE")]}),
    ("Обожаю фильм Легенда о пианисте", {"entities": [(12, 33, "MOVIE")]}),
    ("Вчера был на фильме Мементо", {"entities": [(21, 28, "MOVIE")]}),
    ("Фильм Омерзительная восьмерка", {"entities": [(6, 27, "MOVIE")]}),
    ("Смотрю фильм Трасса 60", {"entities": [(13, 22, "MOVIE")]}),
    ("Планирую пересмотреть фильм Знакомство с Факерами", {"entities": [(30, 53, "MOVIE")]}),
    ("В кино идет фильм Драйв", {"entities": [(16, 21, "MOVIE")]}),
    ("Обожаю анимацию Ральф", {"entities": [(18, 22, "MOVIE")]}),
    ("Недавно смотрел фильм Малышка на миллион", {"entities": [(22, 39, "MOVIE")]}),
    ("Пошли вместе на фильм Пылающий", {"entities": [(22, 31, "MOVIE")]}),
    ("Только что посмотрел фильм Чёрная книга", {"entities": [(22, 34, "MOVIE")]}),
    ("Обожаю фильм Банды Нью-Йорка", {"entities": [(12, 27, "MOVIE")]}),
    ("Вчера посмотрел фильм Реквием по мечте", {"entities": [(21, 38, "MOVIE")]}),
    ("Посмотрел фильм Игра в имитацию", {"entities": [(16, 32, "MOVIE")]}),
    ("Мне нравится фильм Список Шиндлера", {"entities": [(20, 36, "MOVIE")]}),
    ("Смотрел фильм Город ангелов", {"entities": [(15, 28, "MOVIE")]}),
    ("Недавно посмотрел фильм Великий Гэтсби", {"entities": [(22, 37, "MOVIE")]}),
    ("Посмотрел фильм Сияние", {"entities": [(15, 22, "MOVIE")]}),
    ("Обожаю фильм Служанка", {"entities": [(12, 19, "MOVIE")]}),
    ("Сегодня посмотрел фильм Король Лев", {"entities": [(23, 32, "MOVIE")]}),
    ("Мне понравился фильм Искупление", {"entities": [(20, 31, "MOVIE")]}),
    ("Вчера смотрел фильм Трон", {"entities": [(17, 21, "MOVIE")]}),
    ("Смотрю фильм Бамблби", {"entities": [(13, 20, "MOVIE")]}),
    ("Посмотрел фильм Ла-Ла Ленд", {"entities": [(16, 24, "MOVIE")]}),
    ("Обожаю фильм Гран Торино", {"entities": [(12, 23, "MOVIE")]}),
    ("Сегодня посмотрел фильм Хатико", {"entities": [(23, 29, "MOVIE")]}),
    ("Посмотрел фильм Пианист", {"entities": [(16, 24, "MOVIE")]}),
    ("Обожаю фильм Мулан", {"entities": [(12, 17, "MOVIE")]}),
    ("Вчера смотрел фильм Начало", {"entities": [(17, 23, "MOVIE")]}),
    ("Люблю фильм Матрица", {"entities": [(11, 17, "MOVIE")]}),
    ("Посмотрел фильм Интерстеллар", {"entities": [(16, 27, "MOVIE")]}),
    ("Смотрю фильм Джон Уик", {"entities": [(13, 20, "MOVIE")]}),
    ("Недавно посмотрел фильм Доктор Стрэндж", {"entities": [(22, 36, "MOVIE")]}),
]

nlp = spacy.load(nlp_config.output_dir_path)

for data in TRAIN_DATA:
    text = data[0]
    doc = nlp(text)
    print(f"Текст: {text}")
    found = False
    for ent in doc.ents:
        if ent.label_ == "MOVIE":
            print(f"Обнаружена сущность: {ent.text} ({ent.label_})")
            found = True
    if not found:
        print("Сущности не обнаружены")

