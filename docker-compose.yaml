services:
  nginx:
    image: nginx:1.25.3-alpine
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - "${PROJECT_PORT}:8000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/templates:ro
      - ./nginx/data/static.html:/data/static.html:ro
    env_file: .env
    depends_on:
      - auth_service
      - movies_service
    networks:
      - sec_network

  auth_service:
    build: ./auth_service
    container_name: ${AUTH_SERVICE_HOST}
    restart: unless-stopped
    expose:
      - "${AUTH_SERVICE_PORT}"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - sec_network

  movies_service:
    build: movies_service
    container_name: ${MOVIES_SERVICE_HOST}
    restart: unless-stopped
    expose:
      - "${MOVIES_SERVICE_PORT}"
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      postgres:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - sec_network

  assistant_model_trainer:
    build:
      context: ./assistant_model_trainer
    container_name: assistant_model_trainer
    env_file: .env
    depends_on:
      nlp_clickhouse:
        condition: service_healthy
    networks:
      - sec_network

  etl_service:
    build:
      context: ./etl_service
    container_name: etl_service
    env_file: .env
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      elasticsearch:
        condition: service_started
    networks:
      - sec_network

  nlp_clickhouse:
    image: clickhouse/clickhouse-server:25.4.2
    container_name: ${NLP_CLICKHOUSE_HOST}
    env_file:
      - .env
    environment:
      - CLICKHOUSE_DB=$NLP_CLICKHOUSE_DB
      - CLICKHOUSE_USER=$NLP_CLICKHOUSE_USER
      - CLICKHOUSE_PASSWORD=$NLP_CLICKHOUSE_PASSWORD
    healthcheck:
      test: wget --spider -q http://localhost:8123 || exit 1
      interval: 5s
      timeout: 2s
      retries: 10
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - sec_network

networks:
  sec_network:
    driver: bridge

volumes:
  es_data:
  pg_data:
  static_media_volume:
  clickhouse_data:
